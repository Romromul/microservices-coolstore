version: "3"
services:
  catalog-service:
    container_name: catalog-service
    image: "vndg/cs-catalog-service"
    restart: always
    environment:
      - NODE_ENV=development
      - MONGO_DB_URI=mongodb://mongodb/catalog
      - PORT=5002
    ports:
      - "5002:5002"
    expose:
      - "5002"
    build:
      context: ./
      dockerfile: ./src/services/catalog/Dockerfile

  cart-service:
    container_name: cart-service
    image: "vndg/cs-cart-service"
    restart: always
    environment:
      - Features__EfCore__MySqlDb__FQDN=mysqldb:3306
    ports:
      - "5003:5003"
    expose:
      - "5003"
    build:
      context: .
      dockerfile: ./src/services/cart/Dockerfile

  inventory-service:
    container_name: inventory-service
    image: "vndg/cs-inventory-service"
    restart: always
    environment:
      - Features__EfCore__MySqlDb__FQDN=mysqldb:3306
    ports:
      - "5004:5004"
    expose:
      - "5004"
    build:
      context: .
      dockerfile: ./src/services/inventory/Dockerfile

  review-service:
    container_name: review-service
    image: "vndg/cs-review-service"
    restart: always
    ports:
      - "5006:5006"
    expose:
      - "5006"
    build:
      context: .
      dockerfile: ./src/services/review/Dockerfile

  rating-service:
    container_name: rating-service
    image: "vndg/cs-rating-service"
    restart: always
    environment:
      - NODE_ENV=development
      - MONGO_DB_URI=mongodb://mongodb/rating
      - PORT=5007
    ports:
      - "5007:5007"
    expose:
      - "5007"
    build:
      context: .
      dockerfile: ./src/services/rating/Dockerfile

  mongodb:
    container_name: mongodb
    image: "bitnami/mongodb"
    restart: always
    expose:
      - "27017"
    ports:
      - "27017:27017"

  mysqldb:
    container_name: mysqldb
    image: "vndg/cs-mysqldb"
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=P@ssw0rd
    expose:
      - "3306"
    ports:
      - "3306:3306"
    build:
      context: .
      dockerfile: ./deploys/dockers/mysqldb/Dockerfile

volumes:
  shareData:
