# docker-compose -f docker-compose.yml -f docker-compose.override.yml up -d

version: "3"

services:

  web:
    environment:
      - PORT=3000
      - REACT_APP_AUTHORITY=http://localhost:5001
      - REACT_APP_API=http://localhost:5000
    ports:
      - 3000:3000

  webapigatewayapp:
    environment:
      - Services__inventoryservice=http://inventoryapp:5002
      - Services__productcatalogservice=http://productcatalogapp:5003
      - Services__shoppingcartservice=http://shoppingcartapp:5004
      - OtelZipkin__Endpoint=http://zipkin:9411/api/v2/spans
    ports:
      - "5000:5000"

  identityapp:
    ports:
      - "5001:5001"

  inventoryapp:
    environment:
      - ConnectionStrings__postgres=Server=postgresql;Port=5432;Database=postgres;User Id=postgres;Password=P@ssw0rd;
      - Redis__Url=redis:6379
      - Authn__Authority=http://identityapp:5001
      - Authn__Audience=http://localhost:5001/resources
      - OtelZipkin__Endpoint=http://zipkin:9411/api/v2/spans
    ports:
      - "5002:5002"

  productcatalogapp:
    restart: always
    environment:
      - ConnectionStrings__postgres=Server=postgresql;Port=5432;Database=postgres;User Id=postgres;Password=P@ssw0rd;
      - Redis__Url=redis:6379
      - Authn__Authority=http://identityapp:5001
      - Authn__Audience=http://localhost:5001/resources
      - OtelZipkin__Endpoint=http://zipkin:9411/api/v2/spans
      - ElasticSearch__Url=http://elasticsearch:9200
    ports:
      - "5003:5003"
      - "50001:50001"

  shoppingcartapp:
    environment:
      - ConnectionStrings__postgres=Server=postgresql;Port=5432;Database=postgres;User Id=postgres;Password=P@ssw0rd;
      - Redis__Url=redis:6379
      - Authn__Authority=http://identityapp:5001
      - Authn__Audience=http://localhost:5001/resources
      - OtelZipkin__Endpoint=http://zipkin:9411/api/v2/spans
    ports:
      - "5004:5004"

  postgresql:
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=P@ssw0rd
    ports:
      - "5432:5432"

  elasticsearch:
    restart: unless-stopped
    environment:
      - node.name=elasticsearch
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9300:9300"

  zipkin:
    ports:
      - "9411:9411"

  redis:
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - DISABLE_COMMANDS=FLUSHDB,FLUSHALL,CONFIG
    ports:
      - "6379:6379"
