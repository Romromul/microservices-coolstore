version: "3"

services:

  ############################
  # Web - Reactjs
  ############################
  web:
    image: vndg/web:latest
    build:
      context: .
      dockerfile: src/web/Dockerfile
    depends_on:
      - webapigatewayapp
    networks:
      - coolstore-network

  #######################################
  # webapigateway app + Dapr sidecar
  #######################################
  webapigatewayapp:
    image: vndg/webapigatewayapp:latest
    build:
      context: .
      dockerfile: src/BFFs/WebApiGateway/Dockerfile
    depends_on:
      - redis
      - placement
      - identityapp
      - inventoryapp
      - productcatalogapp
      - shoppingcartapp
    networks:
      - coolstore-network

  webapigatewayapp-dapr:
    image: "daprio/daprd:edge"
    command: ["./daprd",
     "-app-id", "webapigatewayapp",
     "-app-port", "5000",
     "-placement-host-address", "placement:50006",
     "-components-path", "/components",
     "-log-level", "debug"]
    volumes:
      - "./components/:/components"
    depends_on:
      - webapigatewayapp
    network_mode: "service:webapigatewayapp"

  #######################################
  # identity app + Dapr sidecar
  #######################################
  identityapp:
    image: vndg/identityapp:latest
    build:
      context: .
      dockerfile: src/Services/Identity/IdentityService/Dockerfile
    depends_on:
      - redis
      - placement
      - postgresql
    networks:
      - coolstore-network

  identityapp-dapr:
    image: "daprio/daprd:edge"
    command: ["./daprd",
     "-app-id", "identityapp",
     "-app-port", "5001",
     "-placement-host-address", "placement:50006",
     "-components-path", "/components",
     "-log-level", "debug"]
    volumes:
      - "./components/:/components"
    depends_on:
      - identityapp
    network_mode: "service:identityapp"

  #######################################
  # inventory app + Dapr sidecar
  #######################################
  inventoryapp:
    image: vndg/inventoryapp:latest
    build:
      context: .
      dockerfile: src/Services/Inventory/InventoryService.Api/Dockerfile
    depends_on:
      - redis
      - placement
      - postgresql
      - identityapp
    networks:
      - coolstore-network

  inventoryapp-dapr:
    image: "daprio/daprd:edge"
    command: ["./daprd",
     "-app-id", "inventoryapp",
     "-app-port", "5002",
     "-placement-host-address", "placement:50006",
     "-components-path", "/components",
     "-log-level", "error"]
    volumes:
      - "./components/:/components"
    depends_on:
      - inventoryapp
    network_mode: "service:inventoryapp"

  #################################################
  # productcatalog app + Dapr sidecar
  #################################################
  productcatalogapp:
    image: vndg/productcatalogapp:latest
    build:
      context: .
      dockerfile: src/Services/ProductCatalog/ProductCatalogService.Api/Dockerfile
    depends_on:
      - redis
      - placement
      - postgresql
      - elasticsearch
      - identityapp
    networks:
      - coolstore-network

  productcatalogapp-dapr:
    image: "daprio/daprd:edge"
    command: ["./daprd",
     "-app-id", "productcatalogapp",
     "-app-port", "5003",
     "-placement-host-address", "placement:50006",
     "-components-path", "/components",
     "-log-level", "error"]
    volumes:
      - "./components/:/components"
    depends_on:
      - productcatalogapp
    network_mode: "service:productcatalogapp"

  #################################################
  # shoppingcart app + Dapr sidecar
  #################################################
  shoppingcartapp:
    image: vndg/shoppingcartapp:latest
    build:
      context: .
      dockerfile: src/Services/ShoppingCart/ShoppingCartService.Api/Dockerfile
    depends_on:
      - redis
      - placement
      - postgresql
      - identityapp
    networks:
      - coolstore-network

  shoppingcartapp-dapr:
    image: "daprio/daprd:edge"
    command: ["./daprd",
     "-app-id", "shoppingcartapp",
     "-app-port", "5004",
     "-placement-host-address", "placement:50006",
     "-components-path", "/components",
     "-log-level", "debug"]
    volumes:
      - "./components/:/components"
    depends_on:
      - shoppingcartapp
    network_mode: "service:shoppingcartapp"

  ############################
  # PostgresQL component
  ############################
  postgresql:
    image: postgres:11-alpine
    container_name: postgresql
    networks:
      - coolstore-network

  ############################
  # ElasticSearch component
  ############################
  elasticsearch:
    image: elasticsearch:7.6.2
    networks:
      - coolstore-network

  ############################
  # Zipkin component
  ############################
  zipkin:
    image: openzipkin/zipkin:latest
    container_name: zipkin
    networks:
      - coolstore-network

  ############################
  # Dapr placement service
  ############################
  placement:
    image: "daprio/dapr"
    command: ["./placement", "-port", "50006"]
    ports:
      - "50006:50006"
    networks:
      - coolstore-network

  ############################
  # Redis state store
  ############################
  redis:
    image: "redis:alpine"
    networks:
      - coolstore-network

networks:
  coolstore-network:
