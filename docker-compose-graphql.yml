version: "3"
services:
  backoffice:
    container_name: backoffice
    image: "vndg/cs-backoffice"
    restart: always
    environment:
      - NODE_ENV=development
      - REACT_APP_GRAPHQL_ENDPOINT=http://localhost:5011
      - REACT_APP_AUTHORITY=http://localhost:8085
      - REACT_APP_ROOT_URL=http://localhost:3000
    ports:
      - "3000:3000"
    expose:
      - "3000"
    build:
      context: .
      dockerfile: ./src/backoffice/Dockerfile

  graphql-server:
    container_name: graphql-server
    image: "vndg/cs-graphql"
    restart: always
    environment:
      - Hosts__BasePath=/
      - Cors__Origins=http://localhost:3000,http://localhost:5011
      - AuthN__Authority=http://${IDENTITY_WEB_EXTERNAL_HOST}:8085
      - AuthN__Audience=api
      - RpcClients__CatalogService=catalog-service:5002
      - RpcClients__CartService=cart-service:5003
      - RpcClients__InventoryService=inventory-service:5004
      - RpcClients__ReviewService=review-service:5006
      - RpcClients__RatingService=rating-service:5007
    ports:
      - "5011:5011"
    expose:
      - "5011"
    build:
      context: .
      dockerfile: ./src/services/graphql/Dockerfile

  idp-service:
    container_name: idp-service
    image: "vndg/cs-idp-service"
    restart: always
    environment:
      - HostSettings__BasePath=/
      - HostSettings__SpaAllowedCorsOrigin=http://${PORTAL_WEB_PUBLISH_HOST}:${PORTAL_WEB_PUBLISH_PORT}
      - HostSettings__BackOfficeAllowedCorsOrigin=http://localhost:3000
      - Hosts__Externals__CurrentUri=http://${IDENTITY_WEB_PUBLISH_HOST}:${IDENTITY_WEB_PUBLISH_PORT}
    ports:
      - "${IDENTITY_WEB_PUBLISH_PORT}:80"
    expose:
      - "${IDENTITY_WEB_PUBLISH_PORT}"
    build:
      context: .
      dockerfile: ./src/services/idp/Dockerfile

  catalog-service:
    container_name: catalog-service
    image: "vndg/cs-catalog-service"
    restart: always
    environment:
      - NODE_ENV=development
      - MONGO_DB_URI=mongodb://mongodb/catalog
      - PORT=5002
    ports:
      - "5002:5002"
    expose:
      - "5002"
    build:
      context: ./
      dockerfile: ./src/services/catalog/Dockerfile

  cart-service:
    container_name: cart-service
    image: "vndg/cs-cart-service"
    restart: always
    environment:
      - Features__EfCore__MySqlDb__FQDN=mysqldb:3306
    ports:
      - "5003:5003"
    expose:
      - "5003"
    build:
      context: .
      dockerfile: ./src/services/cart/Dockerfile

  inventory-service:
    container_name: inventory-service
    image: "vndg/cs-inventory-service"
    restart: always
    environment:
      - Features__EfCore__MySqlDb__FQDN=mysqldb:3306
    ports:
      - "5004:5004"
    expose:
      - "5004"
    build:
      context: .
      dockerfile: ./src/services/inventory/Dockerfile

  review-service:
    container_name: review-service
    image: "vndg/cs-review-service"
    restart: always
    ports:
      - "5006:5006"
    expose:
      - "5006"
    build:
      context: .
      dockerfile: ./src/services/review/Dockerfile

  rating-service:
    container_name: rating-service
    image: "vndg/cs-rating-service"
    restart: always
    environment:
      - NODE_ENV=development
      - MONGO_DB_URI=mongodb://mongodb/rating
      - PORT=5007
    ports:
      - "5007:5007"
    expose:
      - "5007"
    build:
      context: .
      dockerfile: ./src/services/rating/Dockerfile

  mongodb:
    container_name: mongodb
    image: "bitnami/mongodb"
    restart: always
    expose:
      - "27017"
    ports:
      - "27017:27017"

  mysqldb:
    container_name: mysqldb
    image: "vndg/cs-mysqldb"
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=P@ssw0rd
    expose:
      - "3306"
    ports:
      - "3306:3306"
    build:
      context: .
      dockerfile: ./deploys/dockers/mysqldb/Dockerfile

volumes:
  shareData:
