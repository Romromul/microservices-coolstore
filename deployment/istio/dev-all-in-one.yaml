---
# Source: coolstore/templates/cs-system-ns.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: cs-system

---
# Source: coolstore/templates/catalog-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: catalog-service
  namespace: default
  labels:
    app: catalog-service
spec:
  ports:
  - port: 5000
    targetPort: 5002
    protocol: TCP
    name: http
  selector:
    app: catalog
---

---
# Source: coolstore/templates/gateway-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: gateway-service
  namespace: default
  labels:
    app: gateway-service
spec:
  ports:
  - port: 5000
    targetPort: 5000
    protocol: TCP
    name: http
  selector:
    app: gateway
---

---
# Source: coolstore/templates/idp-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: idp-service
  namespace: default
  labels:
    app: idp-service
spec:
  ports:
  - port: 5000
    targetPort: 5001
    protocol: TCP
    name: http
  selector:
    app: idp
---

---
# Source: coolstore/templates/inventory-db-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: inventory-db-service
  namespace: default
  labels:
    app: inventory-db-service
spec:
  ports:
  - protocol: TCP
    port: 1433
    targetPort: 1433
  selector:
    app: inventory-db
---

---
# Source: coolstore/templates/inventory-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: inventory-service
  namespace: default
  labels:
    app: inventory-service
spec:
  ports:
  - port: 5000
    targetPort: 5004
    protocol: TCP
    name: http
  selector:
    app: inventory
---

---
# Source: coolstore/templates/mongodb-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  namespace: default
  labels:
    app: mongodb
spec:
  ports:
  - port: 27017
    name: mongo
  selector:
    app: mongodb
---
---
# Source: coolstore/templates/spa-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: spa-service
  namespace: default
  labels:
    app: spa-service
spec:
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: spa
---

---
# Source: coolstore/templates/catalog-dep.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: catalog-v1
  namespace: default
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: catalog
        version: v1
    spec:
      containers:
      - name: catalog
        image: vndg/cs-catalog-service:latest
        imagePullPolicy: IfNotPresent
        env:
        - name: MONGO_DB_URL
          value: mongodb://mongodb:27017/catalog
        ports:
        - containerPort: 5002
---

---
# Source: coolstore/templates/gateway-dep.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: gateway-v1
  namespace: default
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: gateway
        version: v1
    spec:
      containers:
      - name: gateway
        image: vndg/cs-gateway-service:latest
        imagePullPolicy: IfNotPresent
        env:
        - name: "HostSettings__BasePath"
          value: /cs/
        - name: "HostSettings__ExternalCurrentHostUri"
          value: http://coolstore.local/cs
        - name: "HostSettings__ExternalAuthHostUri"
          value: http://id.coolstore.local
        ports:
        - name: http
          containerPort: 5000
---

---
# Source: coolstore/templates/idp-dep.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: idp-v1
  namespace: default
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: idp
        version: v1
    spec:
      containers:
      - name: idp
        image: vndg/cs-idp-service:latest
        imagePullPolicy: IfNotPresent
        env:
        - name: "HostSettings__BasePath"
          value: /
        - name: "HostSettings__SwaggerRedirectUri"
          value: http://coolstore.local/cs/swagger/oauth2-redirect.html
        - name: "HostSettings__SwaggerPostLogoutRedirectUri"
          value: http://coolstore.local/cs
        - name: "HostSettings__SwaggerAllowedCorsOrigin"
          value: http://coolstore.local
        ports:
        - name: http
          containerPort: 5001
---

---
# Source: coolstore/templates/inventory-db-dep.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: inventory-db-v1
  namespace: default
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: inventory-db
        version: v1
    spec:
      containers:
      - name: inventory-db
        image: vndg/cs-mssql-db:latest
        imagePullPolicy: IfNotPresent
        env: 
        - name: ACCEPT_EULA
          value: Y
        - name: MSSQL_SA_PASSWORD
          value: P@ssw0rd
        ports:
        - containerPort: 1433
---

---
# Source: coolstore/templates/inventory-dep.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: inventory-v1
  namespace: default
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: inventory
        version: v1
    spec:
      # initContainers:
      # - name: init-inventory
      #   image: busybox
      #   command: ['sh', '-c', 'sleep 10 && echo Start running']
      # - name: init-inventory
      #   image: busybox
      #   imagePullPolicy: IfNotPresent
      #   command: ['sh', '-c', 'until nslookup inventory-db-service; do echo Waiting for Inventory DB Service; sleep 2; done;']
        # env:
        # - name: ACCEPT_EULA
        #   value: Y
        # - name: MSSQL_SA_PASSWORD
        #   value: P@ssw0rd
        # command: ['sh', '-c', 
        #   'until ! (grep "MSSQL SERVER STARTED" /var/opt/mssql/log/errorlog | tail -1);
        #   do echo waiting for database; sleep 2; done;']
        # ports:
        # - containerPort: 1433
      # volumes: [
      #   {
      #     name: logs,
      #     hostPath: {
      #       path: /var/opt/mssql/log
      #     }
      #   }
      # ]
      containers:
      # - name: inventory-db
      #   image: vndg/cs-mssql-db:latest
      #   imagePullPolicy: IfNotPresent
      #   volumeMounts:
      #   - name: logs
      #     mountPath: /var/opt/mssql/log
      #   env:
      #   - name: ACCEPT_EULA
      #     value: Y
      #   - name: MSSQL_SA_PASSWORD
      #     value: P@ssw0rd
      #   ports:
      #   - containerPort: 1433
      - name: inventory
        image: vndg/cs-inventory-service:latest
        imagePullPolicy: IfNotPresent
        # env:
        # - name: "ConnectionStrings__SqlServerDefault"
        #   value: "Server=tcp:inventory-db-service,1433;Database=maindb;User Id=cs;Password=P@ssw0rd;"
        # volumeMounts:
        # - name: logs
        #   mountPath: /var/opt/mssql/log
        # command: ['sh', '-c', 'until nslookup inventory-db-service; do echo waiting for mydb; sleep 2; done;']
        ports:
        - containerPort: 5004
---

---
# Source: coolstore/templates/mongodb-dep.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: mongodb-v1
  namespace: default
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: mongodb
        version: v1
    spec:
      containers:
      - name: mongodb 
        image: vndg/cs-catalog-db:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
---
---
# Source: coolstore/templates/spa-dep.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: spa-v1
  namespace: default
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: spa
        version: v1
    spec:
      containers:
      - name: spa
        image: vndg/cs-spa:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
---

---
# Source: coolstore/templates/nginx-ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
  name: coolstore-ingress
  namespace: default
spec:
  rules:
  - host: id.coolstore.local
    http:
      paths:
      - path: /
        backend:
          serviceName: idp-service
          servicePort: 5000
  - host: coolstore.local
    http:
      paths:
      - path: /
        backend:
          serviceName: spa-service
          servicePort: 8080
      - path: /cs
        backend:
          serviceName: gateway-service
          servicePort: 5000

