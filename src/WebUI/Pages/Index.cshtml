@using WebUI.Model
@page "/"
@inject WebUI.AppState state
@inject WebUI.Services.AuthorizedService authorizedService


<div class="section">
  <div class="container">
    <p class="title"><strong class="has-text-info">Welcome</strong> to coolstore microservices</p>
    <p class="subtitle">Below you will find your latests products</p>
  </div>
</div>

<div class="section capsule is-clearfix">
  <AppSidebar></AppSidebar>
  <div class="content is-pulled-right">
    <ItemList Items="items">
      <ItemTemplate Context="item">
        <div class="card is-radius">
          <div class="card-image">
            <NavLink exact href="/product-details">
              <picture class="image">
                <source data-srcset="@item.ImageUrl">
                <img class="lazyloaded" src="@item.ImageUrl" alt="Image of @item.Name">
              </picture>
            </NavLink>
          </div>
          <div class="card-content">
            <div class="media">
              <div class="media-content">
                <NavLink exact href="/product-details">
                  <p class="title is-5">@item.Name</p>
                  <p class="item-price">@item.Price</p>
                </NavLink>
              </div>
              <div class="media-right">
                <p class="field">
                  <button class="button icon is-large add" aria-label="Add to cart">
                    <span class="fa-stack">
                      <i class="fa fa-circle fa-stack-2x"></i>
                      <i class="fa fa-cart-plus fa-stack-1x fa-inverse"></i>
                    </span>
                  </button>
                </p>
              </div>
            </div>
          </div>
        </div>
      </ItemTemplate>
    </ItemList>
  </div>
</div>

@functions {

  IEnumerable<ItemModel> items;

  protected override async Task OnInitAsync()
  {
    await state.InitAppStore(async () => await authorizedService.EnsureAuthz(state.User));

    items = new List<ItemModel>
    {
      new ItemModel
      {
        Id = Guid.NewGuid(),
        Name = "IPhone X",
        Price = 300.50D
      },
      new ItemModel
      {
        Id = Guid.NewGuid(),
        Name = "IPhone XS",
        Price = 1300.50D
      },
      new ItemModel
      {
        Id = Guid.NewGuid(),
        Name = "IPad",
        Price = 1000.50D
      }
    };
  }

}
