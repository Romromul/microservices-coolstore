@inject WebUI.AppState state
@inject WebUI.Services.JsInterop jsInterop

<nav class="navbar navigate-color is-transparent" role="navigation" aria-label="main navigation">
  <div class="navbar-brand">
    <NavLink href="/" exact class="navbar-item" Match=NavLinkMatch.All>
      <img class="logo" src="images/logo.png" alt="logo">
    </NavLink>
    <div class="navbar-burger burger" onclick="document.querySelector('.navbar-menu').classList.toggle('is-active'); document.querySelector('.navbar-burger').classList.toggle('is-active');">
      <span aria-hidden="true"></span>
      <span aria-hidden="true"></span>
      <span aria-hidden="true"></span>
    </div>
  </div>
  <div class="navbar-menu">
    <div class="navbar-start">
    </div>
    <div class="navbar-end">
      <NavLink class="navbar-item" href="" Match=NavLinkMatch.All>
        Home
      </NavLink>
      <NavLink class="navbar-item" href="/new-product">
        New Product
      </NavLink>
      <NavLink class="navbar-item" href="/cart">
        Cart
      </NavLink>
      @if (state.IsSignedIn)
      {
        <NavLink href="/profile" class="navbar-item router-link-exact-active router-link-active">@state.User?.Profile?.Name</NavLink>
      }
      else
      {
        <a href="#" onclick=@StartSignin class="navbar-item router-link-exact-active router-link-active">
          Login
        </a>
      }
    </div>
  </div>
</nav>

@functions {

  protected override async Task OnInitAsync()
  {
    await state.InitAppStore(() => this.StateHasChanged());
  }

  async Task StartSignin(UIEventArgs @event)
  {
    await jsInterop.StartSignin();
  }

}
