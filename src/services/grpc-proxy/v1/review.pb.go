// Code generated by protoc-gen-go. DO NOT EDIT.
// source: review.proto

package review

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PingResponse struct {
	Result               bool     `protobuf:"varint,1,opt,name=Result,proto3" json:"Result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingResponse) Reset()         { *m = PingResponse{} }
func (m *PingResponse) String() string { return proto.CompactTextString(m) }
func (*PingResponse) ProtoMessage()    {}
func (*PingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_deed8eefad2f709e, []int{0}
}

func (m *PingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingResponse.Unmarshal(m, b)
}
func (m *PingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingResponse.Marshal(b, m, deterministic)
}
func (m *PingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingResponse.Merge(m, src)
}
func (m *PingResponse) XXX_Size() int {
	return xxx_messageInfo_PingResponse.Size(m)
}
func (m *PingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PingResponse proto.InternalMessageInfo

func (m *PingResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type ReviewDto struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Content              string   `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	AuthorId             string   `protobuf:"bytes,3,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	AuthorName           string   `protobuf:"bytes,4,opt,name=author_name,json=authorName,proto3" json:"author_name,omitempty"`
	ProductId            string   `protobuf:"bytes,5,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	ProductName          string   `protobuf:"bytes,6,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReviewDto) Reset()         { *m = ReviewDto{} }
func (m *ReviewDto) String() string { return proto.CompactTextString(m) }
func (*ReviewDto) ProtoMessage()    {}
func (*ReviewDto) Descriptor() ([]byte, []int) {
	return fileDescriptor_deed8eefad2f709e, []int{1}
}

func (m *ReviewDto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReviewDto.Unmarshal(m, b)
}
func (m *ReviewDto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReviewDto.Marshal(b, m, deterministic)
}
func (m *ReviewDto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReviewDto.Merge(m, src)
}
func (m *ReviewDto) XXX_Size() int {
	return xxx_messageInfo_ReviewDto.Size(m)
}
func (m *ReviewDto) XXX_DiscardUnknown() {
	xxx_messageInfo_ReviewDto.DiscardUnknown(m)
}

var xxx_messageInfo_ReviewDto proto.InternalMessageInfo

func (m *ReviewDto) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReviewDto) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *ReviewDto) GetAuthorId() string {
	if m != nil {
		return m.AuthorId
	}
	return ""
}

func (m *ReviewDto) GetAuthorName() string {
	if m != nil {
		return m.AuthorName
	}
	return ""
}

func (m *ReviewDto) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *ReviewDto) GetProductName() string {
	if m != nil {
		return m.ProductName
	}
	return ""
}

type ProductDto struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Desc                 string   `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	Price                float64  `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProductDto) Reset()         { *m = ProductDto{} }
func (m *ProductDto) String() string { return proto.CompactTextString(m) }
func (*ProductDto) ProtoMessage()    {}
func (*ProductDto) Descriptor() ([]byte, []int) {
	return fileDescriptor_deed8eefad2f709e, []int{2}
}

func (m *ProductDto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProductDto.Unmarshal(m, b)
}
func (m *ProductDto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProductDto.Marshal(b, m, deterministic)
}
func (m *ProductDto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProductDto.Merge(m, src)
}
func (m *ProductDto) XXX_Size() int {
	return xxx_messageInfo_ProductDto.Size(m)
}
func (m *ProductDto) XXX_DiscardUnknown() {
	xxx_messageInfo_ProductDto.DiscardUnknown(m)
}

var xxx_messageInfo_ProductDto proto.InternalMessageInfo

func (m *ProductDto) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ProductDto) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ProductDto) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *ProductDto) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

type AuthorDto struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserName             string   `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthorDto) Reset()         { *m = AuthorDto{} }
func (m *AuthorDto) String() string { return proto.CompactTextString(m) }
func (*AuthorDto) ProtoMessage()    {}
func (*AuthorDto) Descriptor() ([]byte, []int) {
	return fileDescriptor_deed8eefad2f709e, []int{3}
}

func (m *AuthorDto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthorDto.Unmarshal(m, b)
}
func (m *AuthorDto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthorDto.Marshal(b, m, deterministic)
}
func (m *AuthorDto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthorDto.Merge(m, src)
}
func (m *AuthorDto) XXX_Size() int {
	return xxx_messageInfo_AuthorDto.Size(m)
}
func (m *AuthorDto) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthorDto.DiscardUnknown(m)
}

var xxx_messageInfo_AuthorDto proto.InternalMessageInfo

func (m *AuthorDto) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AuthorDto) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

type GetReviewsRequest struct {
	ProductId            string   `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetReviewsRequest) Reset()         { *m = GetReviewsRequest{} }
func (m *GetReviewsRequest) String() string { return proto.CompactTextString(m) }
func (*GetReviewsRequest) ProtoMessage()    {}
func (*GetReviewsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_deed8eefad2f709e, []int{4}
}

func (m *GetReviewsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetReviewsRequest.Unmarshal(m, b)
}
func (m *GetReviewsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetReviewsRequest.Marshal(b, m, deterministic)
}
func (m *GetReviewsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetReviewsRequest.Merge(m, src)
}
func (m *GetReviewsRequest) XXX_Size() int {
	return xxx_messageInfo_GetReviewsRequest.Size(m)
}
func (m *GetReviewsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetReviewsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetReviewsRequest proto.InternalMessageInfo

func (m *GetReviewsRequest) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

type GetReviewsResponse struct {
	Reviews              []*ReviewDto `protobuf:"bytes,1,rep,name=reviews,proto3" json:"reviews,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetReviewsResponse) Reset()         { *m = GetReviewsResponse{} }
func (m *GetReviewsResponse) String() string { return proto.CompactTextString(m) }
func (*GetReviewsResponse) ProtoMessage()    {}
func (*GetReviewsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_deed8eefad2f709e, []int{5}
}

func (m *GetReviewsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetReviewsResponse.Unmarshal(m, b)
}
func (m *GetReviewsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetReviewsResponse.Marshal(b, m, deterministic)
}
func (m *GetReviewsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetReviewsResponse.Merge(m, src)
}
func (m *GetReviewsResponse) XXX_Size() int {
	return xxx_messageInfo_GetReviewsResponse.Size(m)
}
func (m *GetReviewsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetReviewsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetReviewsResponse proto.InternalMessageInfo

func (m *GetReviewsResponse) GetReviews() []*ReviewDto {
	if m != nil {
		return m.Reviews
	}
	return nil
}

type CreateReviewRequest struct {
	ProductId            string   `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	UserId               string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Content              string   `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateReviewRequest) Reset()         { *m = CreateReviewRequest{} }
func (m *CreateReviewRequest) String() string { return proto.CompactTextString(m) }
func (*CreateReviewRequest) ProtoMessage()    {}
func (*CreateReviewRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_deed8eefad2f709e, []int{6}
}

func (m *CreateReviewRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateReviewRequest.Unmarshal(m, b)
}
func (m *CreateReviewRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateReviewRequest.Marshal(b, m, deterministic)
}
func (m *CreateReviewRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateReviewRequest.Merge(m, src)
}
func (m *CreateReviewRequest) XXX_Size() int {
	return xxx_messageInfo_CreateReviewRequest.Size(m)
}
func (m *CreateReviewRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateReviewRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateReviewRequest proto.InternalMessageInfo

func (m *CreateReviewRequest) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *CreateReviewRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *CreateReviewRequest) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type CreateReviewResponse struct {
	Result               *ReviewDto `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CreateReviewResponse) Reset()         { *m = CreateReviewResponse{} }
func (m *CreateReviewResponse) String() string { return proto.CompactTextString(m) }
func (*CreateReviewResponse) ProtoMessage()    {}
func (*CreateReviewResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_deed8eefad2f709e, []int{7}
}

func (m *CreateReviewResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateReviewResponse.Unmarshal(m, b)
}
func (m *CreateReviewResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateReviewResponse.Marshal(b, m, deterministic)
}
func (m *CreateReviewResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateReviewResponse.Merge(m, src)
}
func (m *CreateReviewResponse) XXX_Size() int {
	return xxx_messageInfo_CreateReviewResponse.Size(m)
}
func (m *CreateReviewResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateReviewResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateReviewResponse proto.InternalMessageInfo

func (m *CreateReviewResponse) GetResult() *ReviewDto {
	if m != nil {
		return m.Result
	}
	return nil
}

type DeleteReviewRequest struct {
	ReviewId             string   `protobuf:"bytes,1,opt,name=review_id,json=reviewId,proto3" json:"review_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteReviewRequest) Reset()         { *m = DeleteReviewRequest{} }
func (m *DeleteReviewRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteReviewRequest) ProtoMessage()    {}
func (*DeleteReviewRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_deed8eefad2f709e, []int{8}
}

func (m *DeleteReviewRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteReviewRequest.Unmarshal(m, b)
}
func (m *DeleteReviewRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteReviewRequest.Marshal(b, m, deterministic)
}
func (m *DeleteReviewRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteReviewRequest.Merge(m, src)
}
func (m *DeleteReviewRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteReviewRequest.Size(m)
}
func (m *DeleteReviewRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteReviewRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteReviewRequest proto.InternalMessageInfo

func (m *DeleteReviewRequest) GetReviewId() string {
	if m != nil {
		return m.ReviewId
	}
	return ""
}

type DeleteReviewResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteReviewResponse) Reset()         { *m = DeleteReviewResponse{} }
func (m *DeleteReviewResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteReviewResponse) ProtoMessage()    {}
func (*DeleteReviewResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_deed8eefad2f709e, []int{9}
}

func (m *DeleteReviewResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteReviewResponse.Unmarshal(m, b)
}
func (m *DeleteReviewResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteReviewResponse.Marshal(b, m, deterministic)
}
func (m *DeleteReviewResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteReviewResponse.Merge(m, src)
}
func (m *DeleteReviewResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteReviewResponse.Size(m)
}
func (m *DeleteReviewResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteReviewResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteReviewResponse proto.InternalMessageInfo

func (m *DeleteReviewResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type EditReviewRequest struct {
	ReviewId             string   `protobuf:"bytes,1,opt,name=review_id,json=reviewId,proto3" json:"review_id,omitempty"`
	Content              string   `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EditReviewRequest) Reset()         { *m = EditReviewRequest{} }
func (m *EditReviewRequest) String() string { return proto.CompactTextString(m) }
func (*EditReviewRequest) ProtoMessage()    {}
func (*EditReviewRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_deed8eefad2f709e, []int{10}
}

func (m *EditReviewRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EditReviewRequest.Unmarshal(m, b)
}
func (m *EditReviewRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EditReviewRequest.Marshal(b, m, deterministic)
}
func (m *EditReviewRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EditReviewRequest.Merge(m, src)
}
func (m *EditReviewRequest) XXX_Size() int {
	return xxx_messageInfo_EditReviewRequest.Size(m)
}
func (m *EditReviewRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EditReviewRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EditReviewRequest proto.InternalMessageInfo

func (m *EditReviewRequest) GetReviewId() string {
	if m != nil {
		return m.ReviewId
	}
	return ""
}

func (m *EditReviewRequest) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type EditReviewResponse struct {
	Result               *ReviewDto `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *EditReviewResponse) Reset()         { *m = EditReviewResponse{} }
func (m *EditReviewResponse) String() string { return proto.CompactTextString(m) }
func (*EditReviewResponse) ProtoMessage()    {}
func (*EditReviewResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_deed8eefad2f709e, []int{11}
}

func (m *EditReviewResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EditReviewResponse.Unmarshal(m, b)
}
func (m *EditReviewResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EditReviewResponse.Marshal(b, m, deterministic)
}
func (m *EditReviewResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EditReviewResponse.Merge(m, src)
}
func (m *EditReviewResponse) XXX_Size() int {
	return xxx_messageInfo_EditReviewResponse.Size(m)
}
func (m *EditReviewResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EditReviewResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EditReviewResponse proto.InternalMessageInfo

func (m *EditReviewResponse) GetResult() *ReviewDto {
	if m != nil {
		return m.Result
	}
	return nil
}

func init() {
	proto.RegisterType((*PingResponse)(nil), "review.PingResponse")
	proto.RegisterType((*ReviewDto)(nil), "review.ReviewDto")
	proto.RegisterType((*ProductDto)(nil), "review.ProductDto")
	proto.RegisterType((*AuthorDto)(nil), "review.AuthorDto")
	proto.RegisterType((*GetReviewsRequest)(nil), "review.GetReviewsRequest")
	proto.RegisterType((*GetReviewsResponse)(nil), "review.GetReviewsResponse")
	proto.RegisterType((*CreateReviewRequest)(nil), "review.CreateReviewRequest")
	proto.RegisterType((*CreateReviewResponse)(nil), "review.CreateReviewResponse")
	proto.RegisterType((*DeleteReviewRequest)(nil), "review.DeleteReviewRequest")
	proto.RegisterType((*DeleteReviewResponse)(nil), "review.DeleteReviewResponse")
	proto.RegisterType((*EditReviewRequest)(nil), "review.EditReviewRequest")
	proto.RegisterType((*EditReviewResponse)(nil), "review.EditReviewResponse")
}

func init() { proto.RegisterFile("review.proto", fileDescriptor_deed8eefad2f709e) }

var fileDescriptor_deed8eefad2f709e = []byte{
	// 568 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0x95, 0x93, 0xd4, 0x89, 0x27, 0x01, 0x29, 0xdb, 0xa8, 0x18, 0x07, 0xd4, 0xb2, 0x12, 0x55,
	0x11, 0x92, 0x0b, 0x81, 0x03, 0x37, 0x14, 0x92, 0xa8, 0x0a, 0x87, 0xaa, 0x72, 0x25, 0x0e, 0xbd,
	0xa0, 0xd4, 0x1e, 0xd2, 0x95, 0x92, 0xac, 0xd9, 0x5d, 0x07, 0xf1, 0x97, 0xb8, 0x70, 0xe2, 0xff,
	0x21, 0xef, 0xae, 0x71, 0x3e, 0x8c, 0xd4, 0xde, 0x76, 0xbe, 0xde, 0xbe, 0x99, 0x37, 0x1a, 0xe8,
	0x08, 0x5c, 0x33, 0xfc, 0x11, 0xa6, 0x82, 0x2b, 0x4e, 0x5c, 0x63, 0x05, 0xc7, 0x73, 0xce, 0xe7,
	0x0b, 0x3c, 0xd7, 0xde, 0xdb, 0xec, 0xdb, 0xb9, 0x62, 0x4b, 0x94, 0x6a, 0xb6, 0x4c, 0x4d, 0x62,
	0xd0, 0xdf, 0x4d, 0xc0, 0x65, 0xaa, 0x7e, 0x9a, 0x20, 0x3d, 0x85, 0xce, 0x15, 0x5b, 0xcd, 0x23,
	0x94, 0x29, 0x5f, 0x49, 0x24, 0x47, 0xe0, 0x46, 0x28, 0xb3, 0x85, 0xf2, 0x9d, 0x13, 0xe7, 0xac,
	0x15, 0x59, 0x8b, 0xfe, 0x71, 0xc0, 0x8b, 0xf4, 0x87, 0x63, 0xc5, 0xc9, 0x63, 0xa8, 0xb1, 0x44,
	0x67, 0x78, 0x51, 0x8d, 0x25, 0xc4, 0x87, 0x66, 0xcc, 0x57, 0x0a, 0x57, 0xca, 0xaf, 0x69, 0x67,
	0x61, 0x92, 0x3e, 0x78, 0xb3, 0x4c, 0xdd, 0x71, 0xf1, 0x95, 0x25, 0x7e, 0x5d, 0xc7, 0x5a, 0xc6,
	0x31, 0x4d, 0xc8, 0x31, 0xb4, 0x6d, 0x70, 0x35, 0x5b, 0xa2, 0xdf, 0xd0, 0x61, 0x30, 0xae, 0xcb,
	0xd9, 0x12, 0xc9, 0x73, 0x80, 0x54, 0xf0, 0x24, 0x8b, 0x55, 0x5e, 0x7e, 0xa0, 0xe3, 0x9e, 0xf5,
	0x4c, 0x13, 0xf2, 0x02, 0x3a, 0x45, 0x58, 0x03, 0xb8, 0x3a, 0xa1, 0x6d, 0x7d, 0x39, 0x02, 0xbd,
	0x01, 0xb8, 0x32, 0x66, 0x15, 0x6f, 0x02, 0x0d, 0x5d, 0x68, 0x48, 0xeb, 0x77, 0xee, 0x4b, 0x50,
	0xc6, 0x96, 0xac, 0x7e, 0x93, 0x1e, 0x1c, 0xa4, 0x82, 0xc5, 0x86, 0xa2, 0x13, 0x19, 0x83, 0x7e,
	0x00, 0x6f, 0xa8, 0xb9, 0x56, 0x41, 0xf7, 0xc1, 0xcb, 0x24, 0xda, 0xce, 0x0c, 0x7e, 0x2b, 0x77,
	0x68, 0x56, 0x03, 0xe8, 0x5e, 0xa0, 0x32, 0xf3, 0x94, 0x11, 0x7e, 0xcf, 0x50, 0xaa, 0x9d, 0x66,
	0x9d, 0x9d, 0x66, 0xe9, 0x10, 0xc8, 0x66, 0x8d, 0xd5, 0xeb, 0x35, 0x34, 0xcd, 0x1e, 0x48, 0xdf,
	0x39, 0xa9, 0x9f, 0xb5, 0x07, 0xdd, 0xd0, 0x6e, 0xc9, 0x3f, 0xb5, 0xa2, 0x22, 0x83, 0xce, 0xe1,
	0x70, 0x24, 0x70, 0xa6, 0xd0, 0xc4, 0xee, 0xf7, 0x31, 0x79, 0x02, 0x4d, 0xdd, 0x09, 0x4b, 0x6c,
	0x1f, 0x6e, 0x6e, 0x4e, 0xb7, 0x54, 0xaf, 0x6f, 0xa9, 0x4e, 0x87, 0xd0, 0xdb, 0xfe, 0xc8, 0xb2,
	0x7d, 0x05, 0xae, 0x28, 0xb7, 0xab, 0x92, 0xac, 0x4d, 0xa0, 0x03, 0x38, 0x1c, 0xe3, 0x02, 0x77,
	0xb9, 0xf6, 0xc1, 0x33, 0x25, 0x25, 0xd5, 0x96, 0x71, 0x4c, 0x13, 0x7a, 0x0a, 0xbd, 0xed, 0x1a,
	0xfb, 0xed, 0x8e, 0x36, 0xf4, 0x33, 0x74, 0x27, 0x09, 0x53, 0xf7, 0x47, 0xfe, 0xff, 0x82, 0xd3,
	0x8f, 0x40, 0x36, 0xb1, 0x1e, 0xdc, 0xe8, 0xe0, 0x77, 0x0d, 0x1e, 0x19, 0xef, 0x35, 0x8a, 0x35,
	0x8b, 0x91, 0x8c, 0x00, 0x4a, 0xa5, 0xc9, 0xd3, 0xa2, 0x74, 0x6f, 0x63, 0x82, 0xa0, 0x2a, 0x64,
	0x19, 0x4c, 0xa1, 0xb3, 0x29, 0x01, 0xe9, 0x17, 0xb9, 0x15, 0x1b, 0x10, 0x3c, 0xab, 0x0e, 0x96,
	0x50, 0x9b, 0x63, 0x2d, 0xa1, 0x2a, 0x04, 0x2a, 0xa1, 0x2a, 0x95, 0x18, 0x01, 0x94, 0xd3, 0x2a,
	0x5b, 0xdb, 0x53, 0xa3, 0x6c, 0x6d, 0x7f, 0xb8, 0x83, 0x11, 0xb4, 0x27, 0xf1, 0x1d, 0x2f, 0xc6,
	0xf5, 0x1e, 0x1a, 0xf9, 0x09, 0x23, 0x47, 0xa1, 0x39, 0x74, 0x61, 0x71, 0xe8, 0xc2, 0x49, 0x7e,
	0xe8, 0x82, 0x5e, 0x01, 0xb5, 0x79, 0xe8, 0x3e, 0xbd, 0xb9, 0xb1, 0x07, 0xf4, 0x57, 0xed, 0xe5,
	0x97, 0xcb, 0x71, 0x38, 0xe2, 0x7c, 0x71, 0xad, 0xb8, 0xc0, 0xd0, 0xe2, 0x4a, 0xab, 0x55, 0xb8,
	0x7e, 0x1b, 0x5e, 0x88, 0x34, 0xbe, 0x75, 0x35, 0xee, 0xbb, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff,
	0xe0, 0xcf, 0x23, 0xdb, 0x87, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ReviewServiceClient is the client API for ReviewService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ReviewServiceClient interface {
	GetReviews(ctx context.Context, in *GetReviewsRequest, opts ...grpc.CallOption) (*GetReviewsResponse, error)
	CreateReview(ctx context.Context, in *CreateReviewRequest, opts ...grpc.CallOption) (*CreateReviewResponse, error)
	DeleteReview(ctx context.Context, in *DeleteReviewRequest, opts ...grpc.CallOption) (*DeleteReviewResponse, error)
	EditReview(ctx context.Context, in *EditReviewRequest, opts ...grpc.CallOption) (*EditReviewResponse, error)
}

type reviewServiceClient struct {
	cc *grpc.ClientConn
}

func NewReviewServiceClient(cc *grpc.ClientConn) ReviewServiceClient {
	return &reviewServiceClient{cc}
}

func (c *reviewServiceClient) GetReviews(ctx context.Context, in *GetReviewsRequest, opts ...grpc.CallOption) (*GetReviewsResponse, error) {
	out := new(GetReviewsResponse)
	err := c.cc.Invoke(ctx, "/review.ReviewService/GetReviews", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reviewServiceClient) CreateReview(ctx context.Context, in *CreateReviewRequest, opts ...grpc.CallOption) (*CreateReviewResponse, error) {
	out := new(CreateReviewResponse)
	err := c.cc.Invoke(ctx, "/review.ReviewService/CreateReview", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reviewServiceClient) DeleteReview(ctx context.Context, in *DeleteReviewRequest, opts ...grpc.CallOption) (*DeleteReviewResponse, error) {
	out := new(DeleteReviewResponse)
	err := c.cc.Invoke(ctx, "/review.ReviewService/DeleteReview", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reviewServiceClient) EditReview(ctx context.Context, in *EditReviewRequest, opts ...grpc.CallOption) (*EditReviewResponse, error) {
	out := new(EditReviewResponse)
	err := c.cc.Invoke(ctx, "/review.ReviewService/EditReview", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ReviewServiceServer is the server API for ReviewService service.
type ReviewServiceServer interface {
	GetReviews(context.Context, *GetReviewsRequest) (*GetReviewsResponse, error)
	CreateReview(context.Context, *CreateReviewRequest) (*CreateReviewResponse, error)
	DeleteReview(context.Context, *DeleteReviewRequest) (*DeleteReviewResponse, error)
	EditReview(context.Context, *EditReviewRequest) (*EditReviewResponse, error)
}

func RegisterReviewServiceServer(s *grpc.Server, srv ReviewServiceServer) {
	s.RegisterService(&_ReviewService_serviceDesc, srv)
}

func _ReviewService_GetReviews_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetReviewsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReviewServiceServer).GetReviews(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/review.ReviewService/GetReviews",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReviewServiceServer).GetReviews(ctx, req.(*GetReviewsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReviewService_CreateReview_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateReviewRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReviewServiceServer).CreateReview(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/review.ReviewService/CreateReview",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReviewServiceServer).CreateReview(ctx, req.(*CreateReviewRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReviewService_DeleteReview_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteReviewRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReviewServiceServer).DeleteReview(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/review.ReviewService/DeleteReview",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReviewServiceServer).DeleteReview(ctx, req.(*DeleteReviewRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReviewService_EditReview_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditReviewRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReviewServiceServer).EditReview(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/review.ReviewService/EditReview",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReviewServiceServer).EditReview(ctx, req.(*EditReviewRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ReviewService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "review.ReviewService",
	HandlerType: (*ReviewServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetReviews",
			Handler:    _ReviewService_GetReviews_Handler,
		},
		{
			MethodName: "CreateReview",
			Handler:    _ReviewService_CreateReview_Handler,
		},
		{
			MethodName: "DeleteReview",
			Handler:    _ReviewService_DeleteReview_Handler,
		},
		{
			MethodName: "EditReview",
			Handler:    _ReviewService_EditReview_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "review.proto",
}

// EchoServiceClient is the client API for EchoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EchoServiceClient interface {
	Ping(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*PingResponse, error)
}

type echoServiceClient struct {
	cc *grpc.ClientConn
}

func NewEchoServiceClient(cc *grpc.ClientConn) EchoServiceClient {
	return &echoServiceClient{cc}
}

func (c *echoServiceClient) Ping(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*PingResponse, error) {
	out := new(PingResponse)
	err := c.cc.Invoke(ctx, "/review.EchoService/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EchoServiceServer is the server API for EchoService service.
type EchoServiceServer interface {
	Ping(context.Context, *empty.Empty) (*PingResponse, error)
}

func RegisterEchoServiceServer(s *grpc.Server, srv EchoServiceServer) {
	s.RegisterService(&_EchoService_serviceDesc, srv)
}

func _EchoService_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EchoServiceServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/review.EchoService/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EchoServiceServer).Ping(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _EchoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "review.EchoService",
	HandlerType: (*EchoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _EchoService_Ping_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "review.proto",
}
